---
- name: Check if the container already started by unbound_container role
  assert:
    that:
      - podman_container_id | default()
      - podman_port_map is defined

- name: Create a temp dir for unbound-data git repo
  tempfile:
    prefix: unbound-data_
    state: directory
  register: res_mktemp
  notify:
    - Cleanup local Unbound data repository

- name: Memoize the repository path
  set_fact:
    unbound_data_dir: "{{ res_mktemp.path }}"

- debug:
    var: unbound_data_dir

- name: Clone Unbound data repository
  git:
    repo: "{{ unbound_data.push_url }}"
    version: "{{ unbound_data.version }}"
    dest: "{{ unbound_data_dir }}"

- name: Copy Unound data files in the container # noqa 301
  command: >-
    podman cp
    {{ unbound_data_dir }}/{{ item }}.conf
    {{ podman_container_id }}:/etc/unbound/local.d/
  loop: "{{ ubd_target_domains }}"

- name: Check the data file format by unbound-checkconf command
  command: >-
    podman exec {{ podman_container_id }}
    unbound-checkconf
  changed_when: false

- name: Restart Unobund in the container # noqa 301
  command: >-
    podman exec {{ podman_container_id }}
    systemctl restart unbound

- name: Wait for the service started
  # BUG WORKAROUND: Open port is not used. Test inside container.
  command: >-
    podman exec {{ podman_container_id }} dig @localhost localhost
  changed_when: false
  register: res_podman_exec
  until: res_podman_exec.rc == 0
  # timeout is 300 sec
  retries: 100
  delay: 3

- name: Update data by 'unbound-control {local_data|local_data_remove}' command # noqa 301
  command: >-
    podman exec {{ podman_container_id }}
    {% if item.state is defined and item.state == 'absent' %}
    unbound-control local_data_remove {{ item.name }}
    {% else %}
    unbound-control local_data {{ item.name }} A {{ item.address }}
    {% endif %}
  loop: "{{ dns_entries }}"

# TODO: Test added and removed entries

- name: Dump data by 'unbound-control list_local_data' command # noqa 301
  shell: >-
    set -o pipefail &&
    (
    echo 'local-zone: {{ item }}. static' &&
    podman exec {{ podman_container_id }} unbound-control list_local_data |
    fgrep '.{{ item }}.' |
    awk '{ printf "local-data: \"%s %s %s\"\n", $1, $4, $5 }'
    ) > {{ unbound_data_dir }}/{{ item }}.conf
  loop: "{{ ubd_target_domains }}"

- name: Copy updated data files in the container again # noqa 301
  command: >-
    podman cp
    {{ unbound_data_dir }}/{{ item }}.conf
    {{ podman_container_id }}:/etc/unbound/local.d/
  loop: "{{ ubd_target_domains }}"

- name: Check the updated data file by unbound-checkconf command
  command: >-
    podman exec {{ podman_container_id }}
    unbound-checkconf
  changed_when: false

- name: Check if files are modified or not # noqa 303
  command:
    cmd: git status
    chdir: "{{ unbound_data_dir }}"
  register: res_git_status
  changed_when: '"Changes not staged for commit:" in res_git_status.stdout'
  notify:
    - Git commit Unbound data
    - Git push Unbound data
